<!DOCTYPE html>
<html>
  <head>
    <title>Main</title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link href="https://fonts.googleapis.com/css?family=Lato" rel="stylesheet">
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" rel='stylesheet' />
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.1/css/materialize.min.css">
    <script src="/socket.io/socket.io.js"></script>

  <style>
  canvas{
            border: 1px solid black;
            position:fixed;
            top:0;
            left:0;
            bottom:0;
            right:0;
            z-index: -1;
         }
  </style>
  </head>
  <body>
  <img src="/images/loading.gif" style="height:100%; width:100%; position:fixed; background-color: white" id="loading"  />
    <div id="app"></div>
    <canvas></canvas>
    <script src="/build/bundle.js"></script>
      <!-- Compiled and minified JavaScript -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/0.100.1/js/materialize.min.js"></script>
  
  <script type="text/javascript">
  var socket = io.connect();
  function keyDown(user){
    console.log("user is ",user);
    
      if(document.getElementById('status-text').value == ""){
        socket.emit("blur")
      }else{
        socket.emit('typing', user);
      }
      document.getElementById('status-text').placeholder = "Type to chat...";
    };
  function setPlaceholder(){
    document.getElementById('txt').placeholder = "Type a message...";
  }
  $(function(){
    

    $("#txt").blur(function(){
      socket.emit('blur');
      
    })
    socket.on('typingp', function(data){
      console.log(data);
      if(document.getElementById('status-text').placeholder.indexOf('is typing')<=0){
        document.getElementById('status-text').placeholder = data + " is typing...";
      }
        
      });
      
    
    socket.on('blurp', function(data){
      document.getElementById('status-text').placeholder = "Type to chat...";
    })
    $('#chat').click(function(){
      var a = [document.getElementById('txt').value, document.getElementById('u').value];
      socket.emit('send message', a);
      document.getElementById('txt').value = ""
    })

    socket.on('new message', function(data){
      //document.getElementById('chat').
      $('#messages').append("<div class='btn btn-block'>"+data.msg[1]+" Said : "+data.msg[0]+"</div>")
    })
  });
     function dropDown(){
          $('.dropdown-button').dropdown();
       }

       $(".dropdown-button").dropdown({ hover: false, belowOrigin: true, constrain_width: false, alignment: 'right', inDuration: 300, outDuration: 225, gutter: 0});
        $(window).on('load',function(){
          $('#loading').hide();
        });
        function clickedMe(){
          $('#loading').show();
          $('#loading').css("z-index","100")
        }
        function hideMe(){
          $("#loading").hide();
        }

        let canvas = document.querySelector('canvas');

//Setting canvas's height and width.
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

//variable for canvas context
let c = canvas.getContext('2d');

// //fillRect(x,y,width,height) takes 4 parameters - x is the starting point from left, y is the starting poing from top
// //width is the width of the rectangle, and height is the height of the rectangle.
// c.fillStyle = "rgba(255,0,0,0.5)";
// c.fillRect(100,100,100,100)
// c.fillStyle = "rgba(0,0,255,0.5)";
// c.fillRect(200,300,100,100);
// c.fillStyle = "rgba(0,255,0,0.5)";
// c.fillRect(300,200,100,100);

// //drawing lines
// c.beginPath();
// c.moveTo(50,300);
// c.lineTo(300,100);
// c.strokeStyle = "red";
// c.stroke();

//drawing arcs
/*
    c.beginPath();
    c.arc(300,300,30,0, Math.PI * 1,false);
    c.stroke();
*/
// //creating multiple circles using arcs
// for(let i = 0; i < 32; i++){
//     //x-co-ordinate;
//     let x = Math.random();
//     //y-co-ordinate;
//     let y = Math.random();
//     //random number for size;
//     let z = Math.random();
//     //randomizing colors
//     let _redDepth = Math.random();
//     let _greenDepth = Math.random();
//     let _blueDepth = Math.random();
//         c.strokeStyle = 'rgb('+Math.floor(_redDepth*255)+','+Math.floor(_greenDepth*255)+','+Math.floor(_blueDepth*255)+')';
//     c.beginPath();
//     c.arc(x*window.innerWidth,y*window.innerHeight,z*100,0,Math.PI * 2, false);
//     c.stroke();
// }
var mouse = {
    x: undefined,
    y: undefined
}

window.addEventListener('mousemove', (event) => {
    mouse.x = event.x;
    mouse.y = event.y;
})

var x = Math.random() * innerWidth;
var y = Math.random() * innerHeight;
var dx = (Math.random()- 0.5) * 2;
var dy = (Math.random() - 0.5) * 2;

let colors = ["AliceBlue","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","Cyan","DarkBlue","DarkCyan","DarkGoldenRod","DarkGray","DarkGrey","DarkGreen","DarkKhaki","DarkMagenta","DarkOliveGreen","Darkorange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkSlateGrey","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DimGrey","DodgerBlue","FireBrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","GoldenRod","Gray","Grey","Green","GreenYellow","HoneyDew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenRodYellow","LightGray","LightGrey","LightGreen","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSlateGrey","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquaMarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenRod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","SlateGrey","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen"];

window.addEventListener('resize', () => {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
})
function Circle(_x,_y,_dx,_dy,_radius){
        this.x = _x;
        this.y = _y;
        this.dx = _dx;
        this.dy = _dy;
        this.radius = _radius;
        this.originalRadius = _radius; // just to let it shrink down to original size
        this.color = colors[Math.floor(Math.random() * colors.length)]
        this.draw = function() {
            c.beginPath();
            c.arc(this.x,this.y, this.radius, 0, Math.PI * 2, false);
            c.fillStyle = this.color;
            c.fill();
            c.strokeStyle = 'rgba(255,0,0,0)'
            c.stroke();
            c.lineWidth = 1.8;
        }
        this.update = function(){
            this.draw();
            if((this.y + this.radius > window.innerHeight) || ((this.y - this.radius) < 0)){
                this.dy = -this.dy;
            }
            if((this.x + this.radius > window.innerWidth) || ((this.x - this.radius) < 0)){
                this.dx = -this.dx;
            }
            this.x += this.dx;
            this.y += this.dy;

            //interactivity
            if(mouse.x - this.x <50 && mouse.x -this.x > -50 && mouse.y -this.y < 50 && mouse.y - this.y >-50){
                if(this.radius < 75)
                this.radius += 5;
            }else if(this.radius > 10){
                if(this.radius > this.originalRadius)
                this.radius -= 10;
            }
        }
}
    
var circleArray = []

for(let i = 0; i < 830; i++){
    var radius = Math.random() * 10;
    var x = Math.random() * (innerWidth - (radius * 2)) + radius;
    var y = Math.random() * (innerHeight - (radius * 2)) + radius;
    var dx = (Math.random() - 0.5) ;
    var dy = (Math.random() - 0.5) ;

    circleArray.push(new Circle(x,y,dx,dy,radius));
}

function animate(){
    requestAnimationFrame(animate);
    c.clearRect(0,0,innerWidth, innerHeight);
    for(let i = 0; i < circleArray.length; i++){
        circleArray[i].update();
    }
}

animate();
  </script>

  </body>
</html>
